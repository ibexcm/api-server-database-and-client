version: 0.2

env:
  parameter-store:
     ADMIN_ACCOUNT_EMAIL_ADDRESS: "ADMIN_ACCOUNT_EMAIL_ADDRESS"
     IP_ADDRESS: "IP_ADDRESS"
     URL_PROTOCOL: "URL_PROTOCOL"
     EMAIL_FROM: "EMAIL_FROM"
     SENDGRID_API_KEY: "SENDGRID_API_KEY"
     SENDGRID_API_URL: "SENDGRID_API_URL"
     SENDGRID_TEMPLATE_HOST: "SENDGRID_TEMPLATE_HOST"
     TWILIO_SID: "TWILIO_SID"
     TWILIO_AID: "TWILIO_AID"
     TWILIO_TOKEN: "TWILIO_TOKEN"
     JWT_PRIVATE_KEY: "JWT_PRIVATE_KEY"
     JWT_PUBLIC_KEY: "JWT_PUBLIC_KEY"
     GRAPHQL_PORT: "GRAPHQL_PORT"
     GRAPHQL_ENDPOINT: "GRAPHQL_ENDPOINT"
     PRISMA_PORT: "PRISMA_PORT"
     PRISMA_ENDPOINT: "PRISMA_ENDPOINT"
     PRISMA_MANAGEMENT_API_SECRET: "PRISMA_MANAGEMENT_API_SECRET"
     PRISMA_SECRET: "PRISMA_SECRET"
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - REPOSITORY_URI=$(echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME)
      - CODEBUILD_RESOLVED_SOURCE_VERSION=$(head -n 1 commit.txt)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-9)
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo $COMMIT_HASH
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image... 
      - docker build --build-arg ADMIN_ACCOUNT_EMAIL_ADDRESS=$ADMIN_ACCOUNT_EMAIL_ADDRESS --build-arg IP_ADDRESS=$IP_ADDRESS --build-arg URL_PROTOCOL=$URL_PROTOCOL --build-arg EMAIL_FROM=$EMAIL_FROM --build-arg SENDGRID_API_KEY=$SENDGRID_API_KEY --build-arg SENDGRID_API_URL=$SENDGRID_API_URL --build-arg SENDGRID_TEMPLATE_HOST=$SENDGRID_TEMPLATE_HOST --build-arg TWILIO_SID=$TWILIO_SID --build-arg TWILIO_AID=$TWILIO_AID --build-arg TWILIO_TOKEN=$TWILIO_TOKEN --build-arg JWT_PRIVATE_KEY=$JWT_PRIVATE_KEY --build-arg JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY --build-arg GRAPHQL_PORT=$GRAPHQL_PORT --build-arg GRAPHQL_ENDPOINT=$GRAPHQL_ENDPOINT --build-arg PRISMA_PORT=$PRISMA_PORT --build-arg PRISMA_ENDPOINT=$PRISMA_ENDPOINT --build-arg PRISMA_MANAGEMENT_API_SECRET=$PRISMA_MANAGEMENT_API_SECRET --build-arg PRISMA_SECRET=$PRISMA_SECRET -t $REPOSITORY_URI:$IMAGE_TAG -f graphqlserver/Dockerfile .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG-$COMMIT_HASH
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$IMAGE_TAG-$COMMIT_HASH
      - printf '[{"name":"graphql","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG-$COMMIT_HASH > imagedefinitions.json
artifacts:
    files: 
      - ./imagedefinitions.json