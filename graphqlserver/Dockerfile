
# Build immage
# docker build --build-arg ADMIN_ACCOUNT_EMAIL_ADDRESS=$ADMIN_ACCOUNT_EMAIL_ADDRESS --build-arg IP_ADDRESS=$IP_ADDRESS --build-arg URL_PROTOCOL=$URL_PROTOCOL --build-arg EMAIL_FROM=$EMAIL_FROM --build-arg SENDGRID_API_KEY=$SENDGRID_API_KEY --build-arg SENDGRID_API_URL=$SENDGRID_API_URL --build-arg SENDGRID_TEMPLATE_HOST=$SENDGRID_TEMPLATE_HOST --build-arg TWILIO_SID=$TWILIO_SID --build-arg TWILIO_AID=$TWILIO_AID --build-arg TWILIO_TOKEN=$TWILIO_TOKEN --build-arg JWT_PRIVATE_KEY=$JWT_PRIVATE_KEY --build-arg JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY --build-arg GRAPHQL_PORT=$GRAPHQL_PORT --build-arg GRAPHQL_ENDPOINT=$GRAPHQL_ENDPOINT --build-arg PRISMA_PORT=$PRISMA_PORT --build-arg PRISMA_ENDPOINT=$PRISMA_ENDPOINT --build-arg PRISMA_MANAGEMENT_API_SECRET=$PRISMA_MANAGEMENT_API_SECRET --build-arg PRISMA_SECRET=$PRISMA_SECRET -t ibex/graphql -f graphqlserver/Dockerfile .
# Run container
# docker run -p 80:80 ibex/graphql

FROM node:12.18.0-alpine3.11
LABEL maintainer="jguzman <jguzman@datum.com.gt>"

ARG ADMIN_ACCOUNT_EMAIL_ADDRESS
ARG IP_ADDRESS
ARG URL_PROTOCOL
ARG EMAIL_FROM
ARG SENDGRID_API_KEY
ARG SENDGRID_API_URL
ARG SENDGRID_TEMPLATE_HOST
ARG TWILIO_SID
ARG TWILIO_AID
ARG TWILIO_TOKEN
ARG JWT_PRIVATE_KEY
ARG JWT_PUBLIC_KEY
ARG GRAPHQL_PORT
ARG GRAPHQL_ENDPOINT
ARG PRISMA_PORT
ARG PRISMA_ENDPOINT
ARG PRISMA_MANAGEMENT_API_SECRET
ARG PRISMA_SECRET

ENV ADMIN_ACCOUNT_EMAIL_ADDRESS=$ADMIN_ACCOUNT_EMAIL_ADDRESS \
    IP_ADDRESS=$IP_ADDRESS \
    URL_PROTOCOL=$URL_PROTOCOL \
    EMAIL_FROM=$EMAIL_FROM \ 
    SENDGRID_API_KEY=$SENDGRID_API_KEY \ 
    SENDGRID_API_URL=$SENDGRID_API_URL \ 
    SENDGRID_TEMPLATE_HOST=$SENDGRID_TEMPLATE_HOST \ 
    TWILIO_SID=$TWILIO_SID \ 
    TWILIO_AID=$TWILIO_AID \ 
    TWILIO_TOKEN=$TWILIO_TOKEN \ 
    JWT_PRIVATE_KEY=$JWT_PRIVATE_KEY \ 
    JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY \ 
    GRAPHQL_PORT=$GRAPHQL_PORT \ 
    GRAPHQL_ENDPOINT=$GRAPHQL_ENDPOINT \ 
    PRISMA_PORT=$PRISMA_PORT \ 
    PRISMA_ENDPOINT=$PRISMA_ENDPOINT \ 
    PRISMA_MANAGEMENT_API_SECRET=$PRISMA_MANAGEMENT_API_SECRET \ 
    PRISMA_SECRET=$PRISMA_SECRET

ENV NODE_ENV='test' \
    NODE_PATH='/usr/local/lib/node_modules'

WORKDIR /app/src/crypto-mercado
COPY . .

RUN npm i -g prisma && \
    npm i -g ts-node && \
    npm i -g typescript
    
RUN yarn && \
    yarn bootstrap && \
    yarn api:schema:generate

WORKDIR /app/src/crypto-mercado/graphqlserver

RUN yarn test

CMD ["yarn", "start"]