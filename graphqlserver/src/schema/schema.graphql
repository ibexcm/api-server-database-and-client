# import User, Bank, Currency, Transaction from "@ibexcm/database/generated/prisma.graphql"
# import GetTransactionInput, CreateTransactionUserInput, GetTransactionBreakdownInput, TransactionBreakdown from "./transaction.graphql"

type Query {
  user: User!
  getBanksByCountry(args: GetBanksByCountryInput!): [Bank!]!
  getCurrenciesByCountry(args: GetCurrenciesByCountryInput!): [Currency!]!

  # TRANSACTION
  getTransaction(args: GetTransactionInput!): Transaction!
  getTransactionBreakdown(args: GetTransactionBreakdownInput!): TransactionBreakdown!

  # ADMIN
  # KYC
  adminGetUsersWithPendingKYCApproval: [User!]!

  # USER
  adminGetUser(args: AdminGetUserInput!): User!
}

type Mutation {
  # ONBOARDING
  sendPhoneNumberVerificationCode(args: SendPhoneNumberVerificationCodeInput!): Boolean!
  verifyPhoneNumber(args: VerifyPhoneNumberInput!): Session!
  sendEmailVerificationCode(args: SendEmailVerificationCodeInput!): Boolean!
  verifyEmail(args: VerifyEmailInput!): Session!
  setPassword(args: SetPasswordInput!): Session!
  uploadGovernmentID(args: UploadGovernmentIDInput!): Session!
  setBankAccount(args: SetBankAccountInput!): Session!

  # AUTHENTICATION
  authenticate(args: AuthenticateInput!): Session!

  # TRANSACTIONS
  createTransaction(args: CreateTransactionInput!): Transaction!

  # CRYPTO ACCOUNTS
  createBitcoinAccount(args: CreateBitcoinAccountInput!): Boolean!

  # ADMIN
  # AUTHENTICATION: admin* must be the prefix for admin endpoints
  adminAuthenticate(args: AdminAuthenticateInput!): Session!

  # KYC
  adminKYCApproveUser(
    userArgs: AdminKYCApproveUserInput!
    governmentIDArgs: AdminKYCApproveUserGovernmentIDInput!
    bankAccountArgs: AdminKYCApproveUserBankAccountInput!
  ): Boolean!
  adminKYCRejectUser(
    userArgs: AdminKYCRejectUserInput!
    rejectArgs: AdminKYCRejectUserInput!
  ): Boolean!
}

type Session {
  token: String
  expiresAt: DateTime
}

input CreateBitcoinAccountInput {
  address: String!
}

input CreateTransactionInput {
  amount: String
  sender: CreateTransactionUserInput!
  recipient: CreateTransactionUserInput
}

input AdminKYCApproveUserInput {
  id: String!
}

input AdminKYCRejectUserInput {
  id: String!
}

input AdminKYCRejectUserInput {
  reason: String
}

input AdminKYCApproveUserBankAccountInput {
  id: String!
}

input AdminKYCApproveUserGovernmentIDInput {
  id: String!
  firstName: String!
  lastName: String!
  CUI: String!
  dateOfBirth: String!
  genre: String!
  expiresAt: String!
}

input AdminGetUserInput {
  id: String!
}

input GetBanksByCountryInput {
  countryID: String!
}

input GetCurrenciesByCountryInput {
  countryID: String!
}

input SetBankAccountInput {
  accountNumber: String!
  fullName: String!
  bankID: String!
  currencyID: String!
  bankAccountType: String!
}

input UploadGovernmentIDInput {
  fileHash: String!
}

input SetPasswordInput {
  password: String!
}

input VerifyEmailInput {
  address: String!
  code: String!
}

input VerifyPhoneNumberInput {
  number: String!
  code: String!
}

input SendPhoneNumberVerificationCodeInput {
  number: String!
}

input SendEmailVerificationCodeInput {
  address: String!
}

input AuthenticateInput {
  address: String!
  password: String!
}

input AdminAuthenticateInput {
  address: String!
  password: String!
}
